{"version":3,"sources":["../alias/react.js","../src/enums.ts","../src/shared.ts","../src/utils.ts","../src/host-config.ts","../src/text-formatters.ts","../src/card-elements.ts","../src/adaptivecards.ts","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/react-adaptivecards/dist/compare.js","../node_modules/react-adaptivecards/dist/index.js","../node_modules/memoize-one/dist/memoize-one.esm.js","styles.js","index.jsx"],"names":["window","__COGNIGY_WEBCHAT","Error","module","exports","React","ReactIs","throwOnDirectAccess","require","index","areInputsEqual","newInputs","lastInputs","length","i","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","result","_len","arguments","newArgs","Array","_key","apply","styleEl","document","createElement","type","id","head","getElementsByTagName","appendChild","getAdaptiveCardCSS","theme","primaryColor","unitSize","primaryGradient","primaryContrastColor","shadow","updateAdaptiveCardCSS","innerHTML","updateAdaptiveCardCSSCheaply","AdaptiveCards","props","onSendMessage","message","useEffect","cardPayload","data","_plugin","payload","card","useMemo","params","adaptivecardsPlugin","match","component","options","fullwidth","cognigyWebchatMessagePlugins","push"],"mappings":"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","file":"adaptivecards.webchat-plugin.js","sourceRoot":"..\\src","sourcesContent":["if (!window.__COGNIGY_WEBCHAT)\r\n    throw new Error('Cognigy Webchat v2.7 or higher has to be loaded before this plugin');\r\n\r\nmodule.exports = window.__COGNIGY_WEBCHAT.React;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport class ActionStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Positive = \"positive\";\r\n    static readonly Destructive = \"destructive\";\r\n}\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\nexport enum InputValidationNecessity {\r\n    Optional,\r\n    Required,\r\n    RequiredWithVisualCue\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Emphasis = \"emphasis\";\r\n    static readonly Accent = \"accent\";\r\n    static readonly Good = \"good\";\r\n    static readonly Attention = \"attention\";\r\n    static readonly Warning = \"warning\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n\t\tlet regExp = /^([0-9]+)(px|\\*)?$/g;\r\n\t\tlet matches = regExp.exec(input);\r\n\t\tlet expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n\t\tif (matches && matches.length >= expectedMatchCount) {\r\n\t\t\tresult.physicalSize = parseInt(matches[1]);\r\n\r\n\t\t\tif (matches.length == 3) {\r\n\t\t\t\tif (matches[2] == \"px\") {\r\n\t\t\t\t\tresult.unit = Enums.SizeUnit.Pixel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return obj ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function setProperty(target: any, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: any, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n","﻿// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nenum InstanceCreationErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nfunction createCardObjectInstance<T extends CardObject>(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenTypeNames: string[],\r\n    allowFallback: boolean,\r\n    createInstanceCallback: (typeName: string) => T,\r\n    createValidationErrorCallback: (typeName: string, errorType: InstanceCreationErrorType) => HostConfig.IValidationError,\r\n    errors: Array<HostConfig.IValidationError>): T {\r\n    let result: T = null;\r\n\r\n    if (json && typeof json === \"object\") {\r\n        let tryToFallback = false;\r\n        let typeName = Utils.getStringValue(json[\"type\"]);\r\n\r\n        if (forbiddenTypeNames && forbiddenTypeNames.indexOf(typeName) >= 0) {\r\n            raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.ForbiddenType), errors);\r\n        }\r\n        else {\r\n            result = createInstanceCallback(typeName);\r\n\r\n            if (!result) {\r\n                tryToFallback = allowFallback;\r\n\r\n                raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.UnknownType), errors);\r\n            }\r\n            else {\r\n                result.setParent(parent);\r\n                result.parse(json, errors);\r\n\r\n                tryToFallback = result.shouldFallback() && allowFallback;\r\n            }\r\n\r\n            if (tryToFallback) {\r\n                let fallback = json[\"fallback\"];\r\n\r\n                if (!fallback) {\r\n                    parent.setShouldFallback(true);\r\n                }\r\n                if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                    result = null;\r\n                }\r\n                else if (typeof fallback === \"object\") {\r\n                    result = createCardObjectInstance<T>(\r\n                        parent,\r\n                        fallback,\r\n                        forbiddenTypeNames,\r\n                        true,\r\n                        createInstanceCallback,\r\n                        createValidationErrorCallback,\r\n                        errors);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function createActionInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenActionTypes: string[],\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): Action {\r\n    return createCardObjectInstance<Action>(\r\n        parent,\r\n        json,\r\n        forbiddenActionTypes,\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.actionTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownActionType,\r\n                    message: \"Unknown action type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Action type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport function createElementInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): CardElement {\r\n    return createCardObjectInstance<CardElement>(\r\n        parent,\r\n        json,\r\n        [], // Forbidden types not supported for elements for now\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.elementTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownElementType,\r\n                    message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                    message: \"Element type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport abstract class SerializableObject {\r\n    private _rawProperties = {};\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._rawProperties = AdaptiveCard.enableFullJsonRoundTrip ? json : {};\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result: any;\r\n\r\n        if (AdaptiveCard.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n            result = this._rawProperties;\r\n        }\r\n        else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        this._rawProperties[name] = value;\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n}\r\n\r\nexport class ValidationFailure {\r\n    readonly errors: HostConfig.IValidationError[] = [];\r\n\r\n    constructor(readonly cardObject: CardObject) { }\r\n}\r\n\r\nexport class ValidationResults {\r\n    private getFailureIndex(cardObject: CardObject) {\r\n        for (let i = 0; i < this.failures.length; i++) {\r\n            if (this.failures[i].cardObject === cardObject) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    readonly allIds: Shared.Dictionary<number> = {};\r\n    readonly failures: ValidationFailure[] = [];\r\n\r\n    addFailure(cardObject: CardObject, error: HostConfig.IValidationError) {\r\n        let index = this.getFailureIndex(cardObject);\r\n        let failure: ValidationFailure;\r\n\r\n        if (index < 0) {\r\n            failure = new ValidationFailure(cardObject);\r\n\r\n            this.failures.push(failure);\r\n        }\r\n        else {\r\n            failure = this.failures[index];\r\n        }\r\n\r\n        failure.errors.push(error);\r\n    }\r\n}\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    abstract getJsonTypeName(): string;\r\n    abstract shouldFallback(): boolean;\r\n    abstract setParent(parent: CardElement);\r\n\r\n    id: string;\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (!Utils.isNullOrEmpty(this.id)) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] == 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.DuplicateId,\r\n                            message: \"Duplicate Id: \" + this.id\r\n                        });\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            }\r\n            else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        let result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: Shared.PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        let renderedSeparator = Utils.renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n\r\n        return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = displayMode;\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = displayMode;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement) {\r\n            if (AdaptiveCard.alwaysBleedSeparators && this.separatorOrientation == Enums.Orientation.Horizontal && !this.isBleeding()) {\r\n                let padding = new Shared.PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            }\r\n            else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): Shared.PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: Shared.PaddingDefinition) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    customCssSelector: string = null;\r\n    height: CardElementHeight = \"auto\";\r\n    minPixelHeight?: number = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    asString(): string {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"isVisible\", this.isVisible, true);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        if (this.minPixelHeight) {\r\n            Utils.setProperty(result, \"minHeight\", this.minPixelHeight + \"px\");\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: Shared.PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            let effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n        this.isVisible = Utils.getBoolValue(json[\"isVisible\"], this.isVisible);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n\r\n        this.spacing = Utils.getEnumValue(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = Utils.getBoolValue(json[\"separator\"], this.separator);\r\n\r\n        let jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n\r\n        if (this.supportsMinHeight) {\r\n            let jsonMinHeight = json[\"minHeight\"];\r\n\r\n            if (jsonMinHeight && typeof jsonMinHeight === \"string\") {\r\n                let isValid = false;\r\n\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(jsonMinHeight, true);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        this.minPixelHeight = size.physicalSize;\r\n\r\n                        isValid = true;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Do nothing. A parse error is emitted below\r\n                }\r\n\r\n                if (!isValid) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.InvalidPropertyValue,\r\n                            message: \"Invalid \\\"minHeight\\\" value: \" + jsonMinHeight\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    getEffectivePadding(): Shared.PaddingDefinition {\r\n        let padding = this.getPadding();\r\n\r\n        return (padding && this.allowCustomPadding) ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    private _text: string;\r\n    private _selectAction: Action = null;\r\n\r\n    protected getEffectiveStyleDefinition() {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    protected getFontSize(fontType: HostConfig.FontTypeDefinition): number {\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(colorSet: HostConfig.ColorSetDefinition, color: Enums.TextColor): HostConfig.TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    fontType?: Enums.FontType = null;\r\n\r\n    asString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setEnumProperty(Enums.FontType, result, \"fontType\", this.fontType, Enums.FontType.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        let fontType = this.hostConfig.getFontTypeDefinition(this.fontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = Utils.getStringValue(json[\"text\"]);\r\n\r\n        let sizeString = Utils.getStringValue(json[\"size\"]);\r\n\r\n        if (sizeString && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValue(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        let weightString = Utils.getStringValue(json[\"weight\"]);\r\n\r\n        if (weightString && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValue(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValue(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = Utils.getBoolValue(json[\"isSubtle\"], this.isSubtle);\r\n        this.fontType = Utils.getEnumValue(Enums.FontType, json[\"fontType\"], this.fontType);\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color ? this.color : Enums.TextColor.Default;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.setText(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText: string = null;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = null;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._processedText = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                if (hostConfig.supportsInteractivity) {\r\n                    element.tabIndex = 0\r\n                    element.setAttribute(\"role\", \"button\");\r\n                    element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                if (this.useMarkdown) {\r\n                    if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==\");\r\n                    }\r\n\r\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                            let markStyle: string = \"\";\r\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (!Utils.isNullOrEmpty(markStyle)) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==/g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            }\r\n            else {\r\n                element.innerHTML = this._processedText;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                let firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            let anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (let i = 0; i < anchors.length; i++) {\r\n                let anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        let parentContainer = this.getParentContainer();\r\n        let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                break;\r\n        }\r\n\r\n        let lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                let anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.href = this.selectAction.getHref();\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            }\r\n            else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    italic: boolean = false;\r\n    strikethrough: boolean = false;\r\n    highlight: boolean = false;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n            targetElement.style.backgroundColor = Utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"italic\", this.italic, false);\r\n        Utils.setProperty(result, \"strikethrough\", this.strikethrough, false);\r\n        Utils.setProperty(result, \"highlight\", this.highlight, false);\r\n\r\n        if (this.selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.italic = Utils.getBoolValue(json[\"italic\"], this.italic);\r\n        this.strikethrough = Utils.getBoolValue(json[\"strikethrough\"], this.strikethrough);\r\n        this.highlight = Utils.getBoolValue(json[\"highlight\"], this.highlight);\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\");\r\n        }\r\n\r\n        let doAdd: boolean = inline.parent == null || forceAdd;\r\n\r\n        if (!doAdd && inline.parent != this) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\");\r\n        }\r\n        else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._inlines.length > 0) {\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            let parentContainer = this.getParentContainer();\r\n            let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                    break;\r\n            }\r\n\r\n            for (let inline of this._inlines) {\r\n                element.appendChild(inline.render());\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    asString(): string {\r\n        let result = \"\";\r\n\r\n        for (let inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(json[\"inlines\"])) {\r\n            for (let jsonInline of json[\"inlines\"]) {\r\n                let inline: CardElement;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    let textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                }\r\n                else {\r\n                    inline = createElementInstance(\r\n                        this,\r\n                        jsonInline,\r\n                        false, // No fallback for inlines in 1.2\r\n                        errors);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._inlines.length > 0) {\r\n            let jsonInlines: any[] = [];\r\n\r\n            for (let inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"inlines\", jsonInlines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        }\r\n        else {\r\n            throw new Error(\"RichTextBlock.getInlineAt: Index out of range (\" + index + \")\");\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement) {\r\n        this.internalAddInline(inline);\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        let index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(null);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.name = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.name, value: this.value };\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                let trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let facts = []\r\n\r\n        for (let fact of this.facts) {\r\n            facts.push(fact.toJSON());\r\n        }\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n\r\n            this.facts = [];\r\n\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n                fact.parse(jsonFacts[i]);\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<HostConfig.IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) { // enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Shared.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.backgroundColor = Utils.getStringValue(json[\"backgroundColor\"]);\r\n\r\n        let styleString = Utils.getStringValue(json[\"style\"]);\r\n\r\n        if (styleString && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValue(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValue(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    private _selectAction: Action = null;\r\n\r\n    protected isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (let forbiddenElementType of forbiddenElementTypes) {\r\n                if (element.getJsonTypeName() === forbiddenElementType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected getSelectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    protected setSelectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement;\r\n    abstract getLastVisibleRenderedItem(): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (this.isSelectable) {\r\n            this._selectAction = createActionInstance(\r\n                this,\r\n                json[\"selectAction\"],\r\n                [ShowCardAction.JsonTypeName],\r\n                !this.isDesignMode(),\r\n                errors);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction && this.isSelectable) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            let item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(item, this.getForbiddenElementTypes())) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + item.getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let element = super.render();\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this._selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this._selectAction != null) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this._selectAction != null && (e.keyCode == 13 || e.keyCode == 32)) {\r\n                    // Enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[0] : null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : null;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValue(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport class MediaSource {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.mimeType = Utils.getStringValue(json[\"mimeType\"]);\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (let source of this.sources) {\r\n            let mimeComponents = source.mimeType.split('/');\r\n\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.poster = Utils.getStringValue(json[\"poster\"]);\r\n        this.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        if (json[\"sources\"] != null) {\r\n            let jsonSources = json[\"sources\"] as Array<any>;\r\n\r\n            this.sources = [];\r\n\r\n            for (let i = 0; i < jsonSources.length; i++) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport class InputValidationOptions {\r\n    necessity: Enums.InputValidationNecessity = Enums.InputValidationNecessity.Optional;\r\n    errorMessage: string = undefined;\r\n\r\n    parse(json: any) {\r\n        this.necessity = Utils.getEnumValue(Enums.InputValidationNecessity, json[\"necessity\"], this.necessity);\r\n        this.errorMessage = Utils.getStringValue(json[\"errorMessage\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.necessity != Enums.InputValidationNecessity.Optional || !Utils.isNullOrEmpty(this.errorMessage)) {\r\n            let result = {}\r\n\r\n            Utils.setEnumProperty(Enums.InputValidationNecessity, result, \"necessity\", this.necessity, Enums.InputValidationNecessity.Optional);\r\n            Utils.setProperty(result, \"errorMessage\", this.errorMessage);\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Shared.IInput {\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _errorMessageElement: HTMLElement;\r\n    private _renderedInputControlElement: HTMLElement;\r\n    private _defaultValue: string;\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n        this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n        if (this.isNullable && this.validation.necessity == Enums.InputValidationNecessity.RequiredWithVisualCue) {\r\n            this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\r\n        }\r\n\r\n        this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n\r\n        this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n        return this._outerContainerElement;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.resetValidationFailureCue();\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.renderedElement) {\r\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n            if (this._errorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._errorMessageElement);\r\n\r\n                this._errorMessageElement = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (this.renderedElement && AdaptiveCard.useBuiltInInputValidation && AdaptiveCard.displayInputValidationErrors && !Utils.isNullOrEmpty(this.validation.errorMessage)) {\r\n            this._errorMessageElement = document.createElement(\"span\");\r\n            this._errorMessageElement.className = this.hostConfig.makeCssClassName(\"ac-input-validation-error-message\");\r\n            this._errorMessageElement.textContent = this.validation.errorMessage;\r\n\r\n            this._outerContainerElement.appendChild(this._errorMessageElement);\r\n        }\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    readonly validation = new InputValidationOptions();\r\n\r\n    title: string;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement && !Utils.isNullOrEmpty(this.value) ? this.value : this.defaultValue);\r\n        Utils.setProperty(result, \"validation\", this.validation.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.id)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"All inputs must have a unique Id\"\r\n                });\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            this.resetValidationFailureCue();\r\n\r\n            let result = this.validation.necessity != Enums.InputValidationNecessity.Optional ? !Utils.isNullOrEmpty(this.value) : true;\r\n\r\n            if (!result && this.renderedElement) {\r\n                this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n                this.showValidationErrorMessage();\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n        this.defaultValue = Utils.getStringValue(json[\"value\"]);\r\n\r\n        let jsonValidation = json[\"validation\"];\r\n\r\n        if (jsonValidation) {\r\n            this.validation.parse(jsonValidation);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get defaultValue(): string {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    set defaultValue(value: string) {\r\n        this._defaultValue = this.parseInputValue(value);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _inlineAction: Action;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            let textareaElement = document.createElement(\"textarea\");\r\n            textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            textareaElement.style.flex = \"1 1 auto\";\r\n            textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                textareaElement.placeholder = this.placeholder;\r\n                textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            textareaElement.oninput = () => { this.valueChanged(); }\r\n            textareaElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Ctrl+Enter pressed\r\n                if (e.keyCode == 10 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return textareaElement;\r\n        }\r\n        else {\r\n            let inputElement = document.createElement(\"input\");\r\n            inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            inputElement.style.flex = \"1 1 auto\";\r\n            inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                inputElement.placeholder = this.placeholder;\r\n                inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            inputElement.oninput = () => { this.valueChanged(); }\r\n            inputElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Enter pressed\r\n                if (e.keyCode == 13 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return inputElement;\r\n        }\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            let button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\"ac-inlineActionButton\");\r\n            button.onclick = (e) => {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.inlineAction.execute();\r\n            };\r\n\r\n            if (!Utils.isNullOrEmpty(this.inlineAction.iconUrl)) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                let icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n                }\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n\r\n                if (!Utils.isNullOrEmpty(this.inlineAction.title)) {\r\n                    button.title = this.inlineAction.title;\r\n                }\r\n            }\r\n            else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n            }\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean = false;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        if (this._inlineAction) {\r\n            Utils.setProperty(result, \"inlineAction\", this._inlineAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = Utils.getBoolValue(json[\"isMultiline\"], this.isMultiline);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.style = Utils.getEnumValue(Enums.InputTextStyle, json[\"style\"], this.style);\r\n        this.inlineAction = createActionInstance(\r\n            this,\r\n            json[\"inlineAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    get inlineAction(): Action {\r\n        return this._inlineAction;\r\n    }\r\n\r\n    set inlineAction(value: Action) {\r\n        this._inlineAction = value;\r\n\r\n        if (this._inlineAction) {\r\n            this._inlineAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            }\r\n            else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            let label = new Label();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            let labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            let spacerElement = document.createElement(\"div\");\r\n            spacerElement.style.width = \"6px\";\r\n\r\n            Utils.appendChild(element, spacerElement);\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        Utils.setProperty(result, \"wrap\", this.wrap);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.valueOn = Utils.getStringValue(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getStringValue(json[\"valueOff\"], this.valueOff);\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.title, value: this.value };\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                let option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                let element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-expanded\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (let i = 0; i < this.choices.length; i++) {\r\n                    let radioInput = document.createElement(\"input\");\r\n                    radioInput.id = Utils.generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    let label = new Label();\r\n                    label.setParent(this);\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    label.wrap = this.wrap;\r\n\r\n                    let labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    let spacerElement = document.createElement(\"div\");\r\n                    spacerElement.style.width = \"6px\";\r\n\r\n                    let compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    compoundInput.style.alignItems = \"center\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, spacerElement);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            let defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-multiSelect\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (let i = 0; i < this.choices.length; i++) {\r\n                let checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = Utils.generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                let label = new Label();\r\n                label.setParent(this);\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                label.wrap = this.wrap;\r\n\r\n                let labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                let spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                let compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean = false;\r\n    isMultiSelect: boolean = false;\r\n    placeholder: string;\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length == 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.CollectionCantBeEmpty,\r\n                    message: \"An Input.ChoiceSet must have at least one choice defined.\"\r\n                });\r\n        }\r\n\r\n        for (let choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.PropertyCantBeNull,\r\n                        message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\"\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = Utils.getBoolValue(json[\"isMultiSelect\"], this.isMultiSelect);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n\r\n        this.choices = [];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            let choiceArray = json[\"choices\"] as Array<any>;\r\n\r\n            for (let i = 0; i < choiceArray.length; i++) {\r\n                let choice = new Choice();\r\n                choice.parse(choiceArray[i]);\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                if (this._selectElement) {\r\n                    return this._selectElement.selectedIndex > 0 ? this._selectElement.value : null;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.setAttribute(\"min\", this.min);\r\n        this._dateInputElement.setAttribute(\"max\", this.max);\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.setAttribute(\"min\", this.min);\r\n        this._timeInputElement.setAttribute(\"max\", this.max);\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        if (/^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        if (!Utils.isNullOrEmpty(this._parentContainerStyle)) {\r\n            this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        }\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.action.style)) {\r\n            if (this.action.style === Enums.ActionStyle.Positive) {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\r\n            }\r\n            else {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.action.style.toLowerCase()));\r\n             }\r\n        }\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render(alignment: Enums.ActionAlignment) {\r\n        this.action.render();\r\n        this.action.renderedElement.style.flex = alignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n        this.action.renderedElement.onclick = (e) => {\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n\r\n            this.click();\r\n        };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Shared.Dictionary<Input>): Array<Input> {\r\n        let result: Input[] = [];\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && !this.ignoreInputValidation) {\r\n            for (let key of Object.keys(referencedInputs)) {\r\n                let input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    title: string;\r\n    iconUrl: string;\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getHref(): string {\r\n        return \"\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        Utils.setProperty(result, \"style\", this.style, Enums.ActionStyle.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    render(baseCssClass: string = \"ac-pushButton\") {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        let buttonElement = document.createElement(\"button\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (this.internalValidateInputs(referencedInputs).length > 0) {\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    };\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.iconUrl = Utils.getStringValue(json[\"iconUrl\"]);\r\n        this.style = Utils.getStringValue(json[\"style\"], this.style);\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getReferencedInputs(): Shared.Dictionary<Input> {\r\n        return this.internalGetReferencedInputs(this.parent.getRootElement().getAllInputs());\r\n    }\r\n\r\n    validateInputs() {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.parent.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style == Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        }\r\n        else {\r\n            if (this.style == Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Submit\";\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        for (let input of allInputs) {\r\n            result[input.id] = input;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (let key of Object.keys(inputs)) {\r\n            let input = inputs[key];\r\n\r\n            if (input.value != null) {\r\n                this._processedData[input.id] = input.value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    static readonly JsonTypeName = \"Action.OpenUrl\";\r\n\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.OpenUrl must have its url property set.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    getHref(): string {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ToggleVisibility\";\r\n\r\n    targetElements = {}\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        for (let elementId of Object.keys(this.targetElements)) {\r\n            let targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n            if (targetElement) {\r\n                if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                    targetElement.isVisible = this.targetElements[elementId];\r\n                }\r\n                else {\r\n                    targetElement.isVisible = !targetElement.isVisible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.targetElements = {};\r\n\r\n        let jsonTargetElements = json[\"targetElements\"];\r\n\r\n        if (jsonTargetElements && Array.isArray(jsonTargetElements)) {\r\n            for (let item of jsonTargetElements) {\r\n                if (typeof item === \"string\") {\r\n                    this.targetElements[item] = undefined;\r\n                }\r\n                else if (typeof item === \"object\") {\r\n                    let jsonElementId = item[\"elementId\"];\r\n\r\n                    if (jsonElementId && typeof jsonElementId === \"string\") {\r\n                        this.targetElements[jsonElementId] = Utils.getBoolValue(item[\"isVisible\"], undefined);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let targetElements: any[] = [];\r\n\r\n        for (let id of Object.keys(this.targetElements)) {\r\n            if (typeof this.targetElements[id] === \"boolean\") {\r\n                targetElements.push(\r\n                    {\r\n                        elementId: id,\r\n                        isVisible: this.targetElements[id]\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                targetElements.push(id);\r\n            }\r\n        }\r\n\r\n        result[\"targetElements\"] = targetElements;\r\n\r\n        return result;\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n    }\r\n\r\n    removeTargetElement(elementId) {\r\n        delete this.targetElements[elementId];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Shared.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.name = Utils.getStringValue(json[\"name\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    }\r\n\r\n    getReferencedInputs(inputs: Array<Input>, referencedInputs: Shared.Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Http\";\r\n\r\n    private _url = new Shared.StringWithSubstitutions();\r\n    private _body = new Shared.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (let header of this._headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._url.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Shared.ContentTypes.applicationJson;\r\n\r\n        for (let header of this._headers) {\r\n            header.prepareForExecution(inputs);\r\n\r\n            if (header.name && header.name.toLowerCase() == \"content-type\") {\r\n                contentType = header.value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n\r\n        if (this._headers.length > 0) {\r\n            let headers = [];\r\n\r\n            for (let header of this._headers) {\r\n                headers.push(header.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.Http must have its url property set.\"\r\n                });\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (let header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.PropertyCantBeNull,\r\n                            message: \"All headers of an Action.Http must have their name and value properties set.\"\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.method = Utils.getStringValue(json[\"method\"]);\r\n        this.body = Utils.getStringValue(json[\"body\"]);\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n\r\n        this._headers = [];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n                httpHeader.parse(jsonHeaders[i]);\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ShowCard\";\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        let jsonCard = json[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, errors);\r\n        }\r\n        else {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        let padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.clear();\r\n\r\n        if (json && json instanceof Array) {\r\n            for (let jsonAction of json) {\r\n                let action = createActionInstance(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    [],\r\n                    !this._owner.isDesignMode(),\r\n                    errors);\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (let item of this.items) {\r\n            if (!isActionAllowed(item, this._owner.getForbiddenActionTypes())) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + item.getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().getEffectiveStyle();\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render(this._owner.hostConfig.actions.actionAlignment);\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValue(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    private _style?: string = null;\r\n    private _bleed: boolean = false;\r\n\r\n    protected applyBackground() {\r\n        let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n        if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n            this.renderedElement.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            let padding = new Shared.PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (this.separatorElement) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        let currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return this.getHasBackground() ?\r\n            new Shared.PaddingDefinition(\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding) : super.getDefaultPadding();\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this.getHasBackground() && this.getBleed();\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"style\", this.style);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._style) {\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._style = Utils.getStringValue(json[\"style\"]);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        let effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    private static readonly defaultFillMode = Enums.FillMode.Cover;\r\n    private static readonly defaultHorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    private static readonly defaultVerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    url: string;\r\n    fillMode: Enums.FillMode = BackgroundImage.defaultFillMode;\r\n    horizontalAlignment: Enums.HorizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n    verticalAlignment: Enums.VerticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n\r\n    reset() {\r\n        this.url = undefined;\r\n        this.fillMode = BackgroundImage.defaultFillMode;\r\n        this.horizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n        this.verticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.fillMode = Utils.getEnumValue(Enums.FillMode, json[\"fillMode\"], this.fillMode);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.isValid()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.fillMode == BackgroundImage.defaultFillMode &&\r\n            this.horizontalAlignment == BackgroundImage.defaultHorizontalAlignment &&\r\n            this.verticalAlignment == BackgroundImage.defaultVerticalAlignment) {\r\n            return this.url;\r\n        }\r\n        else {\r\n            let result = {};\r\n\r\n            Utils.setProperty(result, \"url\", this.url);\r\n            Utils.setEnumProperty(Enums.FillMode, result, \"fillMode\", this.fillMode, BackgroundImage.defaultFillMode);\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment, BackgroundImage.defaultHorizontalAlignment);\r\n            Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalAlignment\", this.verticalAlignment, BackgroundImage.defaultVerticalAlignment);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return !Utils.isNullOrEmpty(this.url);\r\n    }\r\n}\r\n\r\nexport class Container extends StylableCardElementContainer {\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n\r\n    private insertItemAt(\r\n        item: CardElement,\r\n        index: number,\r\n        forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    protected supportsExcplitiHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid()) {\r\n            this.backgroundImage.apply(this.renderedElement);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        if (this.rtl != null && this.rtl) {\r\n            element.dir = \"rtl\";\r\n        }\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return this.backgroundImage.isValid() || super.getHasBackground();\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    readonly backgroundImage: BackgroundImage = new BackgroundImage();\r\n\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n    rtl?: boolean = null;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.toJSON());\r\n\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl != null) {\r\n            return this.rtl;\r\n        }\r\n        else {\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.setShouldFallback(false);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        this.backgroundImage.reset();\r\n\r\n        let jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.fillMode = Enums.FillMode.Cover;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage.parse(jsonBackgroundImage, errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            let items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let element = createElementInstance(\r\n                    this,\r\n                    items[i],\r\n                    !this.isDesignMode(),\r\n                    errors);\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Shared.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <Shared.SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof Shared.SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        try {\r\n            this.width = Shared.SizeAndUnit.parse(jsonWidth);\r\n        }\r\n        catch (e) {\r\n            if (typeof jsonWidth === \"string\" && (jsonWidth === \"auto\" || jsonWidth === \"stretch\")) {\r\n                this.width = jsonWidth;\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width:\" + jsonWidth + \" - defaulting to \\\"auto\\\"\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends StylableCardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _renderedColumns: Array<Column>;\r\n\r\n    private createColumnInstance(json: any, errors: Array<HostConfig.IValidationError>): Column {\r\n        return createCardObjectInstance<Column>(\r\n            this,\r\n            json,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : null;\r\n            },\r\n            (typeName: string, errorType: InstanceCreationErrorType) => {\r\n                if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                    return {\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                        message: \"Element type \" + typeName + \" isn't allowed in a ColumnSet.\"\r\n                    }\r\n                }\r\n            },\r\n            errors);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                let renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                let column = this.createColumnInstance(jsonColumns[i], errors);\r\n\r\n                this._columns.push(column);\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (let column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        if (action.prepareForExecution()) {\r\n            onExecuteActionHandler(action);\r\n        }\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    let card = input.getRootElement() as AdaptiveCard;\r\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: HostConfig.IValidationError, errors: Array<HostConfig.IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    this.hostConfig,\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        if (this.renderIfEmpty) {\r\n            return element;\r\n        }\r\n        else {\r\n            return element.children.length > 0 ? element : null;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount == 0) {\r\n            return false;\r\n        }\r\n        else if (this.renderedActionCount == 1) {\r\n            return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n        }\r\n        else {\r\n            return this._actionCollection.expandedAction != null;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"RichTextBlock\", () => { return new RichTextBlock(); });\r\n        this.registerType(\"TextRun\", () => { return new TextRun(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"ActionSet\", () => { return new ActionSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(OpenUrlAction.JsonTypeName, () => { return new OpenUrlAction(); });\r\n        this.registerType(SubmitAction.JsonTypeName, () => { return new SubmitAction(); });\r\n        this.registerType(ShowCardAction.JsonTypeName, () => { return new ShowCardAction(); });\r\n        this.registerType(ToggleVisibilityAction.JsonTypeName, () => { return new ToggleVisibilityAction(); });\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: HostConfig.Version = new HostConfig.Version(1, 2);\r\n\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static useBuiltInInputValidation: boolean = false;\r\n    static displayInputValidationErrors: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onInputValueChanged: (input: Input) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseError: (error: HostConfig.IValidationError) => void = null;\r\n    static onProcessMarkdown: (text: string, result: IMarkdownProcessingResult) => void = null;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static set processMarkdown(value: (text: string) => string) {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        let result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        }\r\n        else if (window[\"markdownit\"]) {\r\n            // Check for markdownit\r\n            result.outputHtml = window[\"markdownit\"]().render(text);\r\n            result.didProcess = true;\r\n        }\r\n        else {\r\n            console.warn(\"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\")\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n    private _fallbackCard: AdaptiveCard = null;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            let unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onInputValueChanged: (input: Input) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n\r\n    version?: HostConfig.Version = new HostConfig.Version(1, 0);\r\n    fallbackText: string;\r\n    speak: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"The version property must be specified.\"\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._fallbackCard = null;\r\n\r\n        this._cardTypeName = Utils.getStringValue(json[\"type\"]);\r\n        this.speak = Utils.getStringValue(json[\"speak\"]);\r\n\r\n        let langId = json[\"lang\"];\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = HostConfig.Version.parse(json[\"version\"], errors);\r\n\r\n        this.fallbackText = Utils.getStringValue(json[\"fallbackText\"]);\r\n\r\n        let fallbackElement = createElementInstance(\r\n            null,\r\n            json[\"fallback\"],\r\n            !this.isDesignMode(),\r\n            errors);\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        let renderedCard: HTMLElement;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontTypes: {\r\n            default: {\r\n                fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            },\r\n            monospace: {\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            }\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            accent: {\r\n                backgroundColor: \"#C7DEF9\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            good: {\r\n                backgroundColor: \"#CCFFCC\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            attention: {\r\n                backgroundColor: \"#FFC5B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            warning: {\r\n                backgroundColor: \"#FFE2B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = compare;\n// Javascript Deep Compare function compliments of Jean Vincent\n// https://stackoverflow.com/a/6713782/4279849\n\nfunction compare(a, b) {\n  if (a === b) return true;\n  // if both a and b are null or undefined and exactly the same\n\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n  // if they are not strictly equal, they both need to be Objects\n\n  if (a.constructor !== b.constructor) return false;\n  // they must have the exact same prototype chain, the closest we can do is\n  // test there constructor.\n\n  for (var p in a) {\n    if (!a.hasOwnProperty(p)) continue;\n    // other properties were tested using a.constructor === b.constructor\n\n    if (!b.hasOwnProperty(p)) return false;\n    // allows to compare a[ p ] and b[ p ] when set to undefined\n\n    if (a[p] === b[p]) continue;\n    // if they have the same strict value or identity then they are equal\n\n    if (_typeof(a[p]) !== 'object') return false;\n    // Numbers, Strings, Functions, Booleans must be strictly equal\n\n    if (!compare(a[p], b[p])) return false;\n    // Objects and Arrays must be tested recursively\n  }\n\n  for (p in b) {\n    if (b.hasOwnProperty(p) && !a.hasOwnProperty(p)) return false;\n    // allows a[ p ] to be set to undefined\n  }\n  return true;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _adaptivecards = require('adaptivecards');\n\nvar AdaptiveCards = _interopRequireWildcard(_adaptivecards);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _compare = require('./compare');\n\nvar _compare2 = _interopRequireDefault(_compare);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ACTION_OPEN_URL = 'Action.OpenUrl';\nvar ACTION_SHOW_CARD = 'Action.ShowCard';\nvar ACTION_SUBMIT = 'Action.Submit';\n\nvar AdaptiveCard = function (_React$Component) {\n  _inherits(AdaptiveCard, _React$Component);\n\n  function AdaptiveCard(props) {\n    _classCallCheck(this, AdaptiveCard);\n\n    // Create this in the constructor so we don't create it every render\n    var _this = _possibleConstructorReturn(this, (AdaptiveCard.__proto__ || Object.getPrototypeOf(AdaptiveCard)).call(this, props));\n\n    _this.adaptiveCard = new AdaptiveCards.AdaptiveCard();\n    return _this;\n  }\n\n  _createClass(AdaptiveCard, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Remove all references\n      delete this.adaptiveCard;\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      if ((0, _compare2.default)(nextProps.hostConfig, this.props.hostConfig)) {\n        return true;\n      }\n      if ((0, _compare2.default)(nextProps.payload, this.props.payload)) {\n        return true;\n      }\n      if ((0, _compare2.default)(nextProps.onExecuteAction, this.props.onExecuteAction)) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'executeAction',\n    value: function executeAction(a) {\n      var type = a.getJsonTypeName();\n      switch (type) {\n        case ACTION_OPEN_URL:\n          {\n            if (this.props.onActionOpenUrl) {\n              this.props.onActionOpenUrl(a);\n            } else {\n              this.defaultOpenUrlHandler(a);\n            }\n\n            break;\n          }\n        case ACTION_SHOW_CARD:\n          {\n            if (this.props.onActionShowCard) {\n              this.props.onActionShowCard(a);\n            }\n            break;\n          }\n        case ACTION_SUBMIT:\n          {\n            if (this.props.onActionSubmit) {\n              this.props.onActionSubmit(a);\n            }\n            break;\n          }\n      }\n      if (this.props.onExecuteAction) {\n        this.props.onExecuteAction(a);\n      }\n    }\n  }, {\n    key: 'defaultOpenUrlHandler',\n    value: function defaultOpenUrlHandler(action) {\n      window.open(action.url, action.title || '_blank');\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.props.hostConfig) {\n        this.adaptiveCard.hostConfig = new AdaptiveCards.HostConfig(this.props.hostConfig);\n      }\n      this.adaptiveCard.onExecuteAction = this.executeAction.bind(this);\n\n      try {\n        this.adaptiveCard.parse(this.props.payload);\n        var result = this.adaptiveCard.render();\n        return _react2.default.createElement('div', { style: this.props.style, ref: function ref(n) {\n            n && n.appendChild(result);\n          } });\n      } catch (err) {\n        console.error(err);\n        if (this.props.onError) {\n          return this.props.onError(err);\n        } else {\n          return _jsx('div', {\n            style: { color: 'red' }\n          }, void 0, err.message);\n        }\n      }\n    }\n  }]);\n\n  return AdaptiveCard;\n}(_react2.default.Component);\n\nAdaptiveCard.propTypes = {\n  /** The hostConfig object that is passed along to the native AdaptiveCards. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/hostconfig) */\n  hostConfig: _propTypes2.default.object,\n  /** The card schema.  It must comply with the card schema. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/create/cardschema) */\n  payload: _propTypes2.default.object.isRequired,\n  /** Method that will be invoked anytime a card action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actions) */\n  onExecuteAction: _propTypes2.default.func,\n  /** Method that will be invoked when a Submit action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionsubmit) */\n  onActionSubmit: _propTypes2.default.func,\n  /** Method that will be invoked when an Open Url action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionopenurl) */\n  onActionOpenUrl: _propTypes2.default.func,\n  /** Method that will be invoked when a Show Card action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionshowcard) */\n  onActionShowCard: _propTypes2.default.func,\n  /** Method that will be invoked if an error is thrown while trying to render a card. */\n  onError: _propTypes2.default.func,\n  /** JSX styles that will be applied to the card conatiner */\n  style: _propTypes2.default.object\n};\nexports.default = AdaptiveCard;","function areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n","import memoize from 'memoize-one';\r\n\r\n// create a container element for adaptive card styles\r\nconst styleEl = document.createElement('style');\r\nstyleEl.type = 'text/css';\r\nstyleEl.id = 'accss';\r\n\r\n// add container element to the body\r\nconst head = document.head || document.getElementsByTagName('head')[0];\r\nhead.appendChild(styleEl);\r\n\r\n\r\n// calculate css based on a theme\r\nexport const getAdaptiveCardCSS = theme => `\r\n.ac-pushbutton,\r\n.ac-pushbutton.subdued {\r\n  background-color: transparent;\r\n  border: 1px solid ${theme.primaryColor};\r\n  color: ${theme.primaryColor};\r\n\r\n  cursor: pointer;\r\n  height: 40px;\r\n\r\n  padding: ${theme.unitSize}px ${theme.unitSize * 2}px;\r\n  border-radius: ${theme.unitSize * 2}px;\r\n}\r\n\r\n.ac-pushbutton.style-default.expandable.expanded {\r\n  background: ${theme.primaryGradient};\r\n  color: ${theme.primaryContrastColor};\r\n  border: 1px solid ${theme.primaryColor};\r\n\r\n  cursor: pointer;\r\n  height: 40px;\r\n\r\n  padding: ${theme.unitSize}px ${theme.unitSize * 2}px;\r\n  border-radius: ${theme.unitSize * 2}px;\r\n}\r\n\r\n/*.ac-input {\r\n  border: 1px solid ${theme.primaryColor};\r\n  height: 40;\r\n  padding: ${theme.unitSize}px ${theme.unitSize * 2}px;\r\n}*/\r\n\r\n.adaptivecard-wrapper {\r\n  width: 100%;\r\n  padding-left: ${theme.unitSize * 2}px;\r\n  padding-right: ${theme.unitSize * 2}px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.adaptivecard-wrapper > * {\r\n  background-color: white;\r\n  border-radius: ${theme.unitSize}px;\r\n  box-shadow: ${theme.shadow};\r\n}\r\n`;\r\n\r\n// updates the container style element with styles form the render function\r\nconst updateAdaptiveCardCSS = theme => {\r\n  styleEl.innerHTML = getAdaptiveCardCSS(theme);\r\n}\r\n\r\n// updates only if necessary\r\nexport const updateAdaptiveCardCSSCheaply = memoize(updateAdaptiveCardCSS);","import * as React from 'react';\r\nimport AdaptiveCard from 'react-adaptivecards';\r\n\r\nimport { updateAdaptiveCardCSSCheaply } from './styles';\r\n\r\nconst AdaptiveCards = (props) => {\r\n    const { theme, onSendMessage, message } = props;\r\n\r\n    React.useEffect(() => {\r\n        updateAdaptiveCardCSSCheaply(theme);\r\n    }, []);\r\n\r\n    const cardPayload = message.data._plugin.payload;\r\n\r\n    const card = React.useMemo(() => {\r\n        const onActionSubmit = (params) => {\r\n            onSendMessage(\"\", { \"adaptivecards\": params && params.data });\r\n        }\r\n\r\n        const hostConfig = {\r\n            \"spacing\": {\r\n                \"small\": 3,\r\n                \"default\": 8,\r\n                \"medium\": 20,\r\n                \"large\": 30,\r\n                \"extraLarge\": 40,\r\n                \"padding\": 10\r\n            },\r\n            \"separator\": {\r\n                \"lineThickness\": 1,\r\n                \"lineColor\": \"#EEEEEE\"\r\n            },\r\n            \"supportsInteractivity\": true,\r\n            \"fontTypes\": {\r\n                \"default\": {\r\n                    \"fontFamily\": \"'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n                    \"fontSizes\": {\r\n                        \"small\": 12,\r\n                        \"default\": 14,\r\n                        \"medium\": 17,\r\n                        \"large\": 60,\r\n                        \"extraLarge\": 26\r\n                    },\r\n                    \"fontWeights\": {\r\n                        \"lighter\": 200,\r\n                        \"default\": 400,\r\n                        \"bolder\": 600\r\n                    }\r\n                },\r\n                \"monospace\": {\r\n                    \"fontFamily\": \"'Courier New', Courier, monospace\",\r\n                    \"fontSizes\": {\r\n                        \"small\": 12,\r\n                        \"default\": 14,\r\n                        \"medium\": 17,\r\n                        \"large\": 21,\r\n                        \"extraLarge\": 26\r\n                    },\r\n                    \"fontWeights\": {\r\n                        \"lighter\": 200,\r\n                        \"default\": 400,\r\n                        \"bolder\": 600\r\n                    }\r\n                }\r\n            },\r\n            \"containerStyles\": {\r\n                \"default\": {\r\n                    \"backgroundColor\": \"#FFFFFF\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#767676\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#0063B1\",\r\n                            \"subtle\": \"#0063B1\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#FF0000\",\r\n                            \"subtle\": \"#DDFF0000\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#c3ab23\",\r\n                            \"subtle\": \"#DDc3ab23\"\r\n                        }\r\n                    }\r\n                },\r\n                \"emphasis\": {\r\n                    \"backgroundColor\": \"#F0F0F0\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#767676\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#2E89FC\",\r\n                            \"subtle\": \"#882E89FC\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#FF0000\",\r\n                            \"subtle\": \"#DDFF0000\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#c3ab23\",\r\n                            \"subtle\": \"#DDc3ab23\"\r\n                        }\r\n                    }\r\n                },\r\n                \"accent\": {\r\n                    \"backgroundColor\": \"#C7DEF9\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#333333\",\r\n                            \"subtle\": \"#EE333333\"\r\n                        },\r\n                        \"dark\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#66000000\"\r\n                        },\r\n                        \"light\": {\r\n                            \"default\": \"#FFFFFF\",\r\n                            \"subtle\": \"#33000000\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#2E89FC\",\r\n                            \"subtle\": \"#882E89FC\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#cc3300\",\r\n                            \"subtle\": \"#DDcc3300\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#e69500\",\r\n                            \"subtle\": \"#DDe69500\"\r\n                        }\r\n                    }\r\n                },\r\n                \"good\": {\r\n                    \"backgroundColor\": \"#CCFFCC\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#333333\",\r\n                            \"subtle\": \"#EE333333\"\r\n                        },\r\n                        \"dark\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#66000000\"\r\n                        },\r\n                        \"light\": {\r\n                            \"default\": \"#FFFFFF\",\r\n                            \"subtle\": \"#33000000\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#2E89FC\",\r\n                            \"subtle\": \"#882E89FC\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#cc3300\",\r\n                            \"subtle\": \"#DDcc3300\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#e69500\",\r\n                            \"subtle\": \"#DDe69500\"\r\n                        }\r\n                    }\r\n                },\r\n                \"attention\": {\r\n                    \"backgroundColor\": \"#FFC5B2\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#333333\",\r\n                            \"subtle\": \"#EE333333\"\r\n                        },\r\n                        \"dark\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#66000000\"\r\n                        },\r\n                        \"light\": {\r\n                            \"default\": \"#FFFFFF\",\r\n                            \"subtle\": \"#33000000\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#2E89FC\",\r\n                            \"subtle\": \"#882E89FC\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#cc3300\",\r\n                            \"subtle\": \"#DDcc3300\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#e69500\",\r\n                            \"subtle\": \"#DDe69500\"\r\n                        }\r\n                    }\r\n                },\r\n                \"warning\": {\r\n                    \"backgroundColor\": \"#FFE2B2\",\r\n                    \"foregroundColors\": {\r\n                        \"default\": {\r\n                            \"default\": \"#333333\",\r\n                            \"subtle\": \"#EE333333\"\r\n                        },\r\n                        \"dark\": {\r\n                            \"default\": \"#000000\",\r\n                            \"subtle\": \"#66000000\"\r\n                        },\r\n                        \"light\": {\r\n                            \"default\": \"#FFFFFF\",\r\n                            \"subtle\": \"#33000000\"\r\n                        },\r\n                        \"accent\": {\r\n                            \"default\": \"#2E89FC\",\r\n                            \"subtle\": \"#882E89FC\"\r\n                        },\r\n                        \"attention\": {\r\n                            \"default\": \"#cc3300\",\r\n                            \"subtle\": \"#DDcc3300\"\r\n                        },\r\n                        \"good\": {\r\n                            \"default\": \"#54a254\",\r\n                            \"subtle\": \"#DD54a254\"\r\n                        },\r\n                        \"warning\": {\r\n                            \"default\": \"#e69500\",\r\n                            \"subtle\": \"#DDe69500\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"imageSizes\": {\r\n                \"small\": 40,\r\n                \"medium\": 80,\r\n                \"large\": 160\r\n            },\r\n            \"actions\": {\r\n                \"maxActions\": 5,\r\n                \"spacing\": \"default\",\r\n                \"buttonSpacing\": 8,\r\n                \"showCard\": {\r\n                    \"actionMode\": \"inline\",\r\n                    \"inlineTopMargin\": 8\r\n                },\r\n                \"actionsOrientation\": \"horizontal\",\r\n                \"actionAlignment\": \"stretch\"\r\n            },\r\n            \"adaptiveCard\": {\r\n                \"allowCustomStyle\": false\r\n            },\r\n            \"imageSet\": {\r\n                \"imageSize\": \"medium\",\r\n                \"maxImageHeight\": 100\r\n            },\r\n            \"factSet\": {\r\n                \"title\": {\r\n                    \"color\": \"default\",\r\n                    \"size\": \"default\",\r\n                    \"isSubtle\": false,\r\n                    \"weight\": \"bolder\",\r\n                    \"wrap\": true,\r\n                    \"maxWidth\": 150\r\n                },\r\n                \"value\": {\r\n                    \"color\": \"default\",\r\n                    \"size\": \"default\",\r\n                    \"isSubtle\": false,\r\n                    \"weight\": \"default\",\r\n                    \"wrap\": true\r\n                },\r\n                \"spacing\": 8\r\n            }\r\n        }\r\n\r\n        return (\r\n            <AdaptiveCard\r\n                payload={cardPayload}\r\n                onActionSubmit={onActionSubmit}\r\n                hostConfig={hostConfig}\r\n            />\r\n        );\r\n    }, [cardPayload]);\r\n\r\n    return (\r\n        <div className='adaptivecard-wrapper'>\r\n            {card}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst adaptivecardsPlugin = {\r\n    match: 'adaptivecards',\r\n    component: AdaptiveCards,\r\n    options: {\r\n        fullwidth: true\r\n    }\r\n}\r\n\r\nif (!window.cognigyWebchatMessagePlugins) {\r\n    window.cognigyWebchatMessagePlugins = []\r\n}\r\n\r\nwindow.cognigyWebchatMessagePlugins.push(adaptivecardsPlugin);\r\n"]}